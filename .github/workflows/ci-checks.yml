name: CI

on:
  pull_request:

jobs:
  golangci:
    name: linter checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Setup dependencies
        run: |
          go mod tidy
          go mod vendor
      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          args: --timeout 6m
          version: v1.62.0
  tests:
    name: tests
    runs-on: ubuntu-latest
    container: node:latest
    services:
      # Label used to access the service container
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: serj_blogs
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_HOST_AUTH_METHOD: trust
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4 # checks-out the repository under $GITHUB_WORKSPACE
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Get PSQL CLI
        run: |
          apt-get update
          apt-get install --yes --no-install-recommends postgresql-client
      - name: Initialize DB
        run: psql -f sql/db_schema.sql postgresql://postgres:postgres@postgres:5432/serj_blogs
      - name: Setup dependencies
        run: |
          go mod tidy
          go mod vendor
      - name: Run tests
        run: make test-all
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          REDIS_HOST: redis
          REDIS_PASS: <remove>

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Setup dependencies
        run: |
          go mod tidy
          go mod vendor
      - run: make integration-tests
