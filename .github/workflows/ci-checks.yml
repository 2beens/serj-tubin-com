name: CI
on:
  pull_request:
jobs:
  golangci:
    name: linter checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.47.0
  tests:
    name: tests
    runs-on: ubuntu-latest
    container: node:latest
    services:
      # Label used to access the service container
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: serj_blogs
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_HOST_AUTH_METHOD: trust
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
      - uses: actions/checkout@v3 # checks-out the repository under $GITHUB_WORKSPACE
        with:
          fetch-depth: 1
          go-version: '1.19.0'
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19.0'
      - name: Run tests
        run: make test-all
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
