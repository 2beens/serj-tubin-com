some ideas:
    - (done ‚úÖ) ability to ‚úçÔ∏è blog‚ùóÔ∏è
    - (done ‚úÖ) migrate to new Hetzner server
    - (done ‚úÖ) your location, user agent, ip
    - (done ‚úÖ) weather tomorrow
    - (done ‚úÖ) some quotes
    - (done ‚úÖ) add linter (golang ci)
    - (done ‚úÖ) add some sort of versioning (last commit count or hash?)
        - (done ‚úÖ) add to frontend
    - (done ‚úÖ) backup all data (especially netlog) on personal google drive
        - https://developers.google.com/drive/api/v3/quickstart/go
    - (done ‚úÖ) use config files (YML for example) with env variables (production, debug/local, ...)
    - write log viewer web service, maybe write in different technology (Rust ü¶Ä) ? (use webSockets to get logs in realtime)
    - use fasthttp ?
        - https://github.com/valyala/fasthttp
    - try sentry, looks cool:
        - https://sentry.io/welcome/
    - (done ‚úÖ) logrotate (lumberjack added)
    - use ansible?
    - (half done ‚è±, see below) use monit?
    - (done ‚úÖ prometheus used instead) add metrics (graphite + grafana)
    - metrics phase 2
        - alarming
        - add statsD between the service and prometheus
            - https://github.com/statsd/statsd
    - add URL shortener
        - with auto generated path
        - manually enter path
    - (tried ‚úÖ) use elastic search somehow somewhere (logs??)
        - https://logz.io/learn/complete-guide-elk-stack/#elasticsearch
        - https://www.elastic.co/start
        - go client:
            - https://github.com/elastic/go-elasticsearch
    - (done ‚úÖ) BACKUP NETLOG DATA TO GOOGLE/MEGA/ETC

    - apple health data export, backup and use:
        - https://osxdaily.com/2019/05/20/export-health-data-from-iphone/

    - docker image of my server

    - quite interesting package from Uber to detect goroutine leaks in tests:
        - https://github.com/uber-go/goleak

    - etc ...

31-may-2020 serj-tubin-backend service:
    Backend is now ran not by "go run ...", but first built, and ran via systemd

     - created systemd service config file
        - service name: serj-tubin-backend
     - check the service with
        - sudo systemctl status serj-tubin-backend
     - restart
        - sudo systemctl restart serj-tubin-backend
     - see logs
        - sudo journalctl -u serj-tubin-backend.service

     Monit monitoring available via:
        -   https://www.serj-tubin.com/monit/
        -   no services are still enabled
        -   to enable serj-tubin backend (or any other), it needs its service file (done) and PID file (not done yet), then it can be seen in the monit dashboard

apr-2021 - DB replication and high availability:
 - instead of using google drive API to backup netlog visits, let's get a new server somewhere else and setup the replication and HA
 - https://www.postgresql.org/docs/9.2/high-availability.html

- 21-11-2021 notes
 - file service is set on serjmisc
 - the frontend is deployed to sshssr
 - will need to setup the A record to hit the file service endpoing on misc server ‚úÖ
 - will need to setup HTTPS on that endpoint ‚úÖ
