// Code generated by MockGen. DO NOT EDIT.
// Source: exercises.go

// Package stats_test is a generated GoMock package.
package stats_test

import (
	context "context"
	reflect "reflect"

	repo "github.com/2beens/serjtubincom/internal/gymstats/repo"
	gomock "github.com/golang/mock/gomock"
)

// MockexercisesRepo is a mock of exercisesRepo interface.
type MockexercisesRepo struct {
	ctrl     *gomock.Controller
	recorder *MockexercisesRepoMockRecorder
}

// MockexercisesRepoMockRecorder is the mock recorder for MockexercisesRepo.
type MockexercisesRepoMockRecorder struct {
	mock *MockexercisesRepo
}

// NewMockexercisesRepo creates a new mock instance.
func NewMockexercisesRepo(ctrl *gomock.Controller) *MockexercisesRepo {
	mock := &MockexercisesRepo{ctrl: ctrl}
	mock.recorder = &MockexercisesRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockexercisesRepo) EXPECT() *MockexercisesRepoMockRecorder {
	return m.recorder
}

// ListAll mocks base method.
func (m *MockexercisesRepo) ListAll(ctx context.Context, params repo.ExerciseParams) ([]repo.Exercise, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAll", ctx, params)
	ret0, _ := ret[0].([]repo.Exercise)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAll indicates an expected call of ListAll.
func (mr *MockexercisesRepoMockRecorder) ListAll(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAll", reflect.TypeOf((*MockexercisesRepo)(nil).ListAll), ctx, params)
}
