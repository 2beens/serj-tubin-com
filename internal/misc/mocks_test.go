// Code generated by MockGen. DO NOT EDIT.
// Source: exercises_handler.go

// Package misc_test is a generated GoMock package.
package misc_test

import (
	context "context"
	auth "github.com/2beens/serjtubincom/internal/auth"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockauthService is a mock of authService interface
type MockauthService struct {
	ctrl     *gomock.Controller
	recorder *MockauthServiceMockRecorder
}

// MockauthServiceMockRecorder is the mock recorder for MockauthService
type MockauthServiceMockRecorder struct {
	mock *MockauthService
}

// NewMockauthService creates a new mock instance
func NewMockauthService(ctrl *gomock.Controller) *MockauthService {
	mock := &MockauthService{ctrl: ctrl}
	mock.recorder = &MockauthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockauthService) EXPECT() *MockauthServiceMockRecorder {
	return m.recorder
}

// Login mocks base method
func (m *MockauthService) Login(ctx context.Context, creds auth.Credentials, createdAt time.Time) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, creds, createdAt)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login
func (mr *MockauthServiceMockRecorder) Login(ctx, creds, createdAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockauthService)(nil).Login), ctx, creds, createdAt)
}

// Logout mocks base method
func (m *MockauthService) Logout(ctx context.Context, token string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Logout", ctx, token)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Logout indicates an expected call of Logout
func (mr *MockauthServiceMockRecorder) Logout(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logout", reflect.TypeOf((*MockauthService)(nil).Logout), ctx, token)
}
